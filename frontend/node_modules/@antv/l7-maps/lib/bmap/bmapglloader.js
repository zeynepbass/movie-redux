"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
if (!window) {
  throw Error('BMapGL JSAPI can only be used in Browser.');
}
var LoadStatus = /*#__PURE__*/function (LoadStatus) {
  LoadStatus["notload"] = "notload";
  LoadStatus["loading"] = "loading";
  LoadStatus["loaded"] = "loaded";
  LoadStatus["failed"] = "failed";
  return LoadStatus;
}(LoadStatus || {});
var config = {
  key: '',
  BMapGL: {
    version: '1.0'
  }
};
var Status = {
  BMapGL: LoadStatus.notload
};
var onloadCBKs = [];
var onload = function onload(callback) {
  if (typeof callback === 'function') {
    if (Status.BMapGL === LoadStatus.loaded) {
      callback(window.BMapGL);
      return;
    }
    onloadCBKs.push(callback);
  }
};
var load = function load(options) {
  return new Promise(function (resolve, reject) {
    if (Status.BMapGL === LoadStatus.failed) {
      reject('');
    } else if (Status.BMapGL === LoadStatus.notload) {
      // 初次加载
      var key = options.key,
        version = options.version;
      if (!key) {
        reject('请填写key');
        return;
      }
      config.key = key;
      config.BMapGL.version = version || config.BMapGL.version;
      Status.BMapGL = LoadStatus.loading;
      var parentNode = document.body || document.head;
      window.___onBMapGLAPILoaded = function (err) {
        delete window.___onBMapGLAPILoaded;
        if (err) {
          Status.BMapGL = LoadStatus.failed;
          reject(err);
        } else {
          Status.BMapGL = LoadStatus.loaded;
          while (onloadCBKs.length) {
            onloadCBKs.splice(0, 1)[0](window.BMapGL);
          }
        }
      };
      var script = document.createElement('script');
      script.type = 'text/javascript';
      script.src = "https://api.map.baidu.com/api?type=webgl&v=".concat(config.BMapGL.version, "&ak=").concat(config.key, "&callback=___onBMapGLAPILoaded");
      script.onerror = function (e) {
        Status.BMapGL = LoadStatus.failed;
        reject(e);
      };
      parentNode.appendChild(script);
      onload(resolve);
    } else if (Status.BMapGL === LoadStatus.loaded) {
      // deal multi load
      if (options.key && options.key !== config.key) {
        reject('多个不一致的 key');
        return;
      }
      if (options.version && options.version !== config.BMapGL.version) {
        reject('不允许多个版本 JSAPI 混用');
        return;
      }
      resolve(window.BMapGL);
    } else {
      // loading
      if (options.key && options.key !== config.key) {
        reject('多个不一致的 key');
        return;
      }
      if (options.version && options.version !== config.BMapGL.version) {
        reject('不允许多个版本 JSAPI 混用');
        return;
      }
      onload(resolve);
    }
  });
};
var reset = function reset() {
  // @ts-ignore
  delete window.BMapGL;
  config = {
    key: '',
    BMapGL: {
      version: '1.0'
    }
  };
  Status = {
    BMapGL: LoadStatus.notload
  };
};
var _default = exports.default = {
  load: load,
  reset: reset
};