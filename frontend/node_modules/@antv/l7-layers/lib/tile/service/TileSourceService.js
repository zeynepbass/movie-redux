"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _typeof = require("@babel/runtime/helpers/typeof");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TileSourceService = void 0;
var _objectSpread2 = _interopRequireDefault(require("@babel/runtime/helpers/objectSpread2"));
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var turf = _interopRequireWildcard(require("@turf/helpers"));
var _union = _interopRequireDefault(require("@turf/union"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * 专门处理 Tile 数据相关
 */
var TileSourceService = exports.TileSourceService = /*#__PURE__*/function () {
  function TileSourceService() {
    (0, _classCallCheck2.default)(this, TileSourceService);
  }
  (0, _createClass2.default)(TileSourceService, [{
    key: "getCombineFeature",
    value: function getCombineFeature(features) {
      var p = null;
      var properties = features[0];
      features.map(function (feature) {
        var polygon = turf.polygon(feature.coordinates);
        // tslint:disable-next-line: prefer-conditional-expression
        if (p === null) {
          p = polygon;
        } else {
          p = (0, _union.default)(p, polygon);
        }
      });
      if (properties) {
        p.properties = (0, _objectSpread2.default)({}, properties);
      }
      return p;
    }
  }]);
  return TileSourceService;
}();