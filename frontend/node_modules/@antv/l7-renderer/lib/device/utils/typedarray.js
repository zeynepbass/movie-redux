var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/device/utils/typedarray.ts
var typedarray_exports = {};
__export(typedarray_exports, {
  isTypedArray: () => isTypedArray
});
module.exports = __toCommonJS(typedarray_exports);
var dtypes = {
  "[object Int8Array]": 5120,
  "[object Int16Array]": 5122,
  "[object Int32Array]": 5124,
  "[object Uint8Array]": 5121,
  "[object Uint8ClampedArray]": 5121,
  "[object Uint16Array]": 5123,
  "[object Uint32Array]": 5125,
  "[object Float32Array]": 5126,
  "[object Float64Array]": 5121,
  "[object ArrayBuffer]": 5121
};
function isTypedArray(x) {
  return Object.prototype.toString.call(x) in dtypes;
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  isTypedArray
});
