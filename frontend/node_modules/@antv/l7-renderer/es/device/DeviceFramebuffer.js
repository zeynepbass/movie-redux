import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import { Format } from '@antv/g-device-api';
import { isTexture2D } from "./DeviceTexture2D";
var DeviceFramebuffer = /*#__PURE__*/function () {
  function DeviceFramebuffer(device, options) {
    _classCallCheck(this, DeviceFramebuffer);
    this.device = device;
    // TODO: depth
    var width = options.width,
      height = options.height,
      color = options.color;
    if (isTexture2D(color)) {
      this.renderTarget = device.createRenderTargetFromTexture(color.get());
      this.width = color['width'];
      this.height = color['height'];
    } else if (width && height) {
      this.renderTarget = device.createRenderTarget({
        format: Format.U8_RGBA_RT,
        width: width,
        height: height
      });
      this.width = width;
      this.height = height;
    }
  }
  _createClass(DeviceFramebuffer, [{
    key: "get",
    value: function get() {
      return this.renderTarget;
    }
  }, {
    key: "destroy",
    value: function destroy() {
      this.renderTarget.destroy();
    }
  }, {
    key: "resize",
    value: function resize(_ref) {
      var width = _ref.width,
        height = _ref.height;
      if (this.width !== width || this.height !== height) {
        if (this.renderTarget) {
          this.renderTarget.destroy();
        }
        this.renderTarget = this.device.createRenderTarget({
          format: Format.U8_RGBA_RT,
          width: width,
          height: height
        });
        this.width = width;
        this.height = height;
      }
    }
  }]);
  return DeviceFramebuffer;
}();
export { DeviceFramebuffer as default };