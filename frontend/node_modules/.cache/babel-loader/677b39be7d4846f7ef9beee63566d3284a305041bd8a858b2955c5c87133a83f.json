{"ast":null,"code":"const INITIAL_STATE = {\n  yaziListesi: []\n};\nconst Memory = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case 'YAZI_LISTESI_GETIR':\n      return {\n        ...state,\n        yaziListesi: action.payload\n      };\n    case 'MEMORY_EKLE':\n      return {\n        ...state,\n        yaziListesi: [...state.yaziListesi, action.payload]\n      };\n    case 'MEMORY_SIL':\n      return {\n        ...state,\n        yaziListesi: state.yaziListesi.filter(memory => memory._id !== action.payload)\n      };\n      break;\n    case 'MEMORY_UPDATE\"':\n      // Güncellenmiş yazının id'sini alın\n      const updatedYaziId = action.payload._id;\n      // Güncellenmiş yazının diğer bilgilerini alın\n      const updatedYazi = action.payload;\n      // Güncellenmiş yazıyı eklemek için yeni bir yaziListesi dizisi oluşturun\n      const yeniYaziListesi = state.yaziListesi.map(yazi => {\n        // Güncellenmiş yazının id'si mevcut yazi ile eşleşiyorsa, güncellenmiş yazıyı döndürün\n        if (yazi._id === updatedYaziId) {\n          return updatedYazi;\n        } else {\n          // Eşleşme yoksa mevcut yazıyı döndürün\n          return yaziListesi;\n        }\n      });\n      // Güncellenmiş yazıyı içeren yeni yaziListesi dizisini dönün\n      return {\n        ...state,\n        yaziListesi: yeniYaziListesi\n      };\n    default:\n      return state;\n  }\n};\n_c = Memory;\nexport default Memory;\nvar _c;\n$RefreshReg$(_c, \"Memory\");","map":{"version":3,"names":["INITIAL_STATE","yaziListesi","Memory","state","action","type","payload","filter","memory","_id","updatedYaziId","updatedYazi","yeniYaziListesi","map","yazi","_c","$RefreshReg$"],"sources":["/Users/zeynepbas/Documents/GitHub/movie-redux/frontend/src/Pages/reducers/Memory.js"],"sourcesContent":["const INITIAL_STATE={\n    yaziListesi:[],\n\n};\n const Memory = (state=INITIAL_STATE,action)=>{\n    switch (action.type) {\n        case 'YAZI_LISTESI_GETIR':\n        return {...state,yaziListesi:action.payload}\n        case 'MEMORY_EKLE':\n        return {...state, yaziListesi:[...state.yaziListesi, action.payload] }\n           case 'MEMORY_SIL':\n           return {...state, yaziListesi:state.yaziListesi.filter((memory)=>memory._id !== action.payload)} \n            break; \n            case 'MEMORY_UPDATE\"':\n\n                    // Güncellenmiş yazının id'sini alın\n                    const updatedYaziId = action.payload._id;\n                    // Güncellenmiş yazının diğer bilgilerini alın\n                    const updatedYazi = action.payload;\n                    // Güncellenmiş yazıyı eklemek için yeni bir yaziListesi dizisi oluşturun\n                    const yeniYaziListesi = state.yaziListesi.map(yazi => {\n                      // Güncellenmiş yazının id'si mevcut yazi ile eşleşiyorsa, güncellenmiş yazıyı döndürün\n                      if (yazi._id === updatedYaziId) {\n                        return updatedYazi;\n                      }\n                      else{\n       // Eşleşme yoksa mevcut yazıyı döndürün\n       return yaziListesi;\n                      }\n               \n                    });\n                    // Güncellenmiş yazıyı içeren yeni yaziListesi dizisini dönün\n                    return {...state, yaziListesi: yeniYaziListesi};\n                  \n    \n        default:\n            return state;\n    }\n};\nexport default Memory;"],"mappings":"AAAA,MAAMA,aAAa,GAAC;EAChBC,WAAW,EAAC;AAEhB,CAAC;AACA,MAAMC,MAAM,GAAGA,CAACC,KAAK,GAACH,aAAa,EAACI,MAAM,KAAG;EAC1C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,oBAAoB;MACzB,OAAO;QAAC,GAAGF,KAAK;QAACF,WAAW,EAACG,MAAM,CAACE;MAAO,CAAC;IAC5C,KAAK,aAAa;MAClB,OAAO;QAAC,GAAGH,KAAK;QAAEF,WAAW,EAAC,CAAC,GAAGE,KAAK,CAACF,WAAW,EAAEG,MAAM,CAACE,OAAO;MAAE,CAAC;IACnE,KAAK,YAAY;MACjB,OAAO;QAAC,GAAGH,KAAK;QAAEF,WAAW,EAACE,KAAK,CAACF,WAAW,CAACM,MAAM,CAAEC,MAAM,IAAGA,MAAM,CAACC,GAAG,KAAKL,MAAM,CAACE,OAAO;MAAC,CAAC;MAC/F;IACA,KAAK,gBAAgB;MAEb;MACA,MAAMI,aAAa,GAAGN,MAAM,CAACE,OAAO,CAACG,GAAG;MACxC;MACA,MAAME,WAAW,GAAGP,MAAM,CAACE,OAAO;MAClC;MACA,MAAMM,eAAe,GAAGT,KAAK,CAACF,WAAW,CAACY,GAAG,CAACC,IAAI,IAAI;QACpD;QACA,IAAIA,IAAI,CAACL,GAAG,KAAKC,aAAa,EAAE;UAC9B,OAAOC,WAAW;QACpB,CAAC,MACG;UACnB;UACA,OAAOV,WAAW;QACH;MAEF,CAAC,CAAC;MACF;MACA,OAAO;QAAC,GAAGE,KAAK;QAAEF,WAAW,EAAEW;MAAe,CAAC;IAG3D;MACI,OAAOT,KAAK;EACpB;AACJ,CAAC;AAACY,EAAA,GAlCKb,MAAM;AAmCb,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}